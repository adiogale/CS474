[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\adity\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\adity\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Oracle Corporation Java 17.0.1)
[debug]       Load.loadUnit: plugins took 103.5984ms
[debug]       Load.loadUnit: defsScala took 0.4078ms
[debug] [Loading] Scanning directory C:\Users\adity\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\adity\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 21.239 ms
[debug]           Load.resolveProject(global-plugins) took 48.5126ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\adity\.sbt\1.0\plugins, plugins: List(<none>))) took 97.6232ms
[debug] [Loading] Done in C:\Users\adity\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 131.356ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2357ms
[debug]     Load.loadUnit(file:/C:/Users/adity/.sbt/1.0/plugins/, ...) took 245.8597ms
[debug]   Load.apply: load took 446.3261ms
[debug]   Load.apply: resolveProjects took 7.0114ms
[debug]   Load.apply: finalTransforms took 87.5525ms
[debug]   Load.apply: config.delegates took 13.2999ms
[debug]   Load.apply: Def.make(settings)... took 522.9464ms
[debug]   Load.apply: structureIndex took 118.2683ms
[debug]   Load.apply: mkStreams took 2.2574ms
[info] loading global plugins from C:\Users\adity\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 5759.7773ms
[debug]           Load.loadUnit: plugins took 22.3843ms
[debug]           Load.loadUnit: defsScala took 0.0021ms
[debug] [Loading] Scanning directory C:\Users\adity\IdeaProjects\CS474\project
[debug]             Load.loadUnit: mkEval took 5.8968ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\adity\IdeaProjects\CS474\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.094 ms
[info] loading settings for project cs474-build from idea.sbt ...
[debug]               Load.resolveProject(cs474-build) took 13.2467ms
[debug]             Load.loadTransitive: finalizeProject(Project(id cs474-build, base: C:\Users\adity\IdeaProjects\CS474\project, plugins: List(<none>))) took 14.7914ms
[debug] [Loading] Done in C:\Users\adity\IdeaProjects\CS474\project, returning: (cs474-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1850.0884ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.6236ms
[debug]         Load.loadUnit(file:/C:/Users/adity/IdeaProjects/CS474/project/, ...) took 1877.7436ms
[debug]       Load.apply: load took 1878.9004ms
[debug]       Load.apply: resolveProjects took 0.0745ms
[debug]       Load.apply: finalTransforms took 10.053ms
[debug]       Load.apply: config.delegates took 0.3765ms
[debug]       Load.apply: Def.make(settings)... took 85.5738ms
[debug]       Load.apply: structureIndex took 27.2748ms
[debug]       Load.apply: mkStreams took 0.004ms
[info] loading project definition from C:\Users\adity\IdeaProjects\CS474\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 3325.7548ms
[debug]     Load.loadUnit: defsScala took 0.003ms
[debug] [Loading] Scanning directory C:\Users\adity\IdeaProjects\CS474
[debug]       Load.loadUnit: mkEval took 0.2621ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.7434 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 25.3685ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\adity\IdeaProjects\CS474, plugins: List(<none>))) took 28.3746ms
[debug] [Loading] Done in C:\Users\adity\IdeaProjects\CS474, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1403.5961ms
[debug]     Load.loadUnit: cleanEvalClasses took 18.5383ms
[debug]   Load.loadUnit(file:/C:/Users/adity/IdeaProjects/CS474/, ...) took 4748.641ms
[debug] Load.apply: load took 4750.0287ms
[debug] Load.apply: resolveProjects took 0.0788ms
[debug] Load.apply: finalTransforms took 24.3674ms
[debug] Load.apply: config.delegates took 0.2458ms
[debug] Load.apply: Def.make(settings)... took 56.4068ms
[debug] Load.apply: structureIndex took 17.7194ms
[debug] Load.apply: mkStreams took 0.0014ms
[info] set current project to CS474 (in build file:/C:/Users/adity/IdeaProjects/CS474/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 60821 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 60821, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to CS474 (in build file:/C:/Users/adity/IdeaProjects/CS474/)
[debug] > Exec(idea-shell, None, None)
